}
print(movie.review)
}
write.csv(page, "daummovie2.csv")
library(rvest)
site <- "https://movie.daum.net/moviedb/grade?movieId=131576&type=netizen&page="
movie.review <- NULL
for(i in 1:5){
url <- paste0(site,i)
text <- read_html(url)
# 평점
nodes <- html_nodes(text, ".emph_grade")
point <- html_text(nodes)
# 리뷰글
nodes <- html_nodes(text, ".desc_review")
review <- html_text(nodes, trim=TRUE)
if(length(review) == 10){
page <- data.frame(point, review)
movie.review <- rbind(movie.review, page)
}
print(movie.review)
}
write.csv(page, "daummovie2.csv")
library(rvest)
site <- "https://movie.daum.net/moviedb/grade?movieId=131576&type=netizen&page="
movie.review <- NULL
for(i in 1:5){
url <- paste0(site,i)
text <- read_html(url)
# 평점
nodes <- html_nodes(text, ".emph_grade")
point <- html_text(nodes)
# 리뷰글
nodes <- html_nodes(text, ".desc_review")
review <- html_text(nodes, trim=TRUE)
if(length(review) == 10){
page <- data.frame(point, review)
movie.review <- rbind(movie.review, page)
}
print(movie.review)
}
write.csv(movie.review, "daummovie2.csv")
library(rvest)
site <- "https://movie.daum.net/moviedb/grade?movieId=131576&type=netizen&page="
movie.review <- NULL
for(i in 1:5){
url <- paste0(site,i)
text <- read_html(url)
# 평점
nodes <- html_nodes(text, ".emph_grade")
point <- html_text(nodes)
# 리뷰글
nodes <- html_nodes(text, ".desc_review")
review <- html_text(nodes, trim=TRUE)
if(length(review) == 10){
page <- data.frame(point, review)
movie.review <- rbind(movie.review, page)
}
}
write.csv(movie.review, "daummovie2.csv")
library(rvest)
site <- "https://movie.daum.net/moviedb/grade?movieId=131576&type=netizen&page="
movie.review <- NULL
library(rvest)
site <- "https://movie.daum.net/moviedb/grade?movieId=131576&type=netizen&page="
movie.review <- NULL
i <- 1
repeat{
url <- paste0(site,i)
text <- read_html(url)
# 평점
nodes <- html_nodes(text, ".emph_grade")
point <- html_text(nodes)
# 리뷰글
nodes <- html_nodes(text, ".desc_review")
review <- html_text(nodes, trim=TRUE)
if(length(review) == 10){
page <- data.frame(point, review)
movie.review <- rbind(movie.review, page)
}else if(length(review) == 0){
break;
}
i <- i+1
}
write.csv(movie.review, "daummovie3.csv")
library(rvest)
site <- "https://movie.daum.net/moviedb/grade?movieId=131576&type=netizen&page="
movie.review <- NULL
i <- 1
repeat{
url <- paste0(site,i)
text <- read_html(url)
# 평점
nodes <- html_nodes(text, ".emph_grade")
point <- html_text(nodes)
# 리뷰글
nodes <- html_nodes(text, ".desc_review")
review <- html_text(nodes, trim=TRUE)
if(length(review) == 10){
page <- data.frame(point, review)
movie.review <- rbind(movie.review, page)
}else if(length(review) == 0){
break;
}
print(i)
i <- i+1
}
write.csv(movie.review, "daummovie3.csv")
library(rvest)
site <- "https://movie.daum.net/moviedb/grade?movieId=131576&type=netizen&page="
movie.review <- NULL
i <- 1
repeat{
url <- paste0(site,i)
text <- read_html(url)
# 평점
nodes <- html_nodes(text, ".emph_grade")
point <- html_text(nodes)
# 리뷰글
nodes <- html_nodes(text, ".desc_review")
review <- html_text(nodes, trim=TRUE)
page <- data.frame(point, review)
movie.review <- rbind(movie.review, page)
if(length(review) == 0){
break;
}
print(i)
i <- i+1
}
write.csv(movie.review, "daummovie3.csv")
# <a> 태그의 컨텐츠와 href 속성값
a <- html_nodes(text, "a")
a
library(rvest)
text<- NULL; title<-NULL; point<-NULL; review<-NULL; page=NULL
url <- "http://unico2013.dothome.co.kr/crawling/exercise_bs.html"
text <- read_html(url)
# <h1> 태그의 컨텐츠
h1 <- html_nodes(text, "h1")
h1_content <- html_text(h1)
h1_content
# <a> 태그의 컨텐츠와 href 속성값
a <- html_nodes(text, "a")
a
a_content <- html_text(a)
a_content
a_href <- html_atrr(a,"href")
a_href <- html_attr(a,"href")
a_href
a <- html_nodes(text, "a")
a_content <- html_text(a)
a_content
a_href <- html_attr(a,"href")
a_href
# <img> 태그의 src 속성값
img <- html_nodes(text, "img")
img
img_src <- html_attr(img,"src")
img_src
# 첫번째 <h2> 태그의 컨텐츠
h2 <- html_nodes(text, "h2")
h2
h2_nth1 <- html_nodes(text, "h2:nth-of-type(1)")
h2_nth1_cont <- html_text(h2_nth1)
h2_nth1_cont
# <ul> 태그의 자식 태그들 중 style 속성의 값이 green으로 끝나는 태그의 컨텐츠
ul <- html_nodes(text, "ul")
ul
# 두 번째 <h2> 태그의 컨텐츠
h2_nth2 <- html_nodes(text,"h2:nth-of-type(2)")
2> 태그의 컨텐츠
h2_nth2 <- html_nodes(text,"h2:nth-of-type(2)")
h2_nth2_cont <- html_text(h2_nth2)
h2_nth2_cont
h2_nth2 <- html_nodes(text,"h2:nth-of-type(2)")
h2_nth2_cont <- html_text(h2_nth2)
h2_nth2_cont
# <ul> 태그의 자식 태그들 중 style 속성의 값이 green으로 끝나는 태그의 컨텐츠
ul <- html_nodes(text, "ul/")
# <ul> 태그의 자식 태그들 중 style 속성의 값이 green으로 끝나는 태그의 컨텐츠
ul <- html_nodes(text, "ul > [style$=green]")
ul
html_text(ul)
library(rvest)
text<- NULL; title<-NULL; point<-NULL; review<-NULL; page=NULL
url <- "http://unico2013.dothome.co.kr/crawling/exercise_bs.html"
text <- read_html(url)
# <h1> 태그의 컨텐츠
h1 <- html_nodes(text, "h1")
html_text(h1)
# <a> 태그의 컨텐츠와 href 속성값
a <- html_nodes(text, "a")
html_text(a)
html_attr(a,"href")
# <img> 태그의 src 속성값
img <- html_nodes(text, "img")
html_attr(img,"src")
# 첫번째 <h2> 태그의 컨텐츠
h2_nth1 <- html_nodes(text, "h2:nth-of-type(1)")
html_text(h2_nth1)
# <ul> 태그의 자식 태그들 중 style 속성의 값이 green으로 끝나는 태그의 컨텐츠
ul <- html_nodes(text, "ul > [style$=green]")
html_text(ul)
# 두 번째 <h2> 태그의 컨텐츠
h2_nth2 <- html_nodes(text,"h2:nth-of-type(2)")
html_text(h2_nth2)
# <ol> 태그의 모든 자식 태그들의 컨텐츠
html_attr(a,"href")
# <ol> 태그의 모든 자식 태그들의 컨텐츠
html_text(html_node(text,"ol >*"))
# <ol> 태그의 모든 자식 태그들의 컨텐츠
html_text(html_nodes(text,"ol > *"))
library(rvest)
url <- "http://media.daum.net/ranking/popular/"
text <- nodes_html(url)
text <- read_html(url)
text
title <- html_text(html.nodes(text, "a < .link_txt"))
title <- html_text(html_nodes(text, "a < .link_txt"))
title <- html_text(html_nodes(text, "a > .link_txt"))
title
title <- html_text(html_nodes(text, ".link_txt"))
title
title <- html_text(html_nodes(text, ".tit_thimb> .link_txt"))
title
library(rvest)
url <- "http://media.daum.net/ranking/popular/"
text <- read_html(url)
for(index in 1:50)
title <- html_text(html_nodes(text, paste0("#mArticle > div.rank_news > ul.list_news2 > li:nth-child(", index, ") > div.cont_thumb > strong > a")))
name <- html_text(html_nodes(text, paste0("#mArticle > div.rank_news > ul.list_news2 > li:nth-child(", index ,") > div.cont_thumb > strong > span")))
page <- data.frame(title, name)
write.csv(page, "daumnews.csv")
library(rvest)
url <- "http://media.daum.net/ranking/popular/"
text <- read_html(url)
news <- NULL
for(index in 1:50)
title <- html_text(html_nodes(text, paste0("#mArticle > div.rank_news > ul.list_news2 > li:nth-child(", index, ") > div.cont_thumb > strong > a")))
name <- html_text(html_nodes(text, paste0("#mArticle > div.rank_news > ul.list_news2 > li:nth-child(", index ,") > div.cont_thumb > strong > span")))
page <- data.frame(title, name)
news <- rbind(news,page)
write.csv(page, "daumnews.csv")
View(news)
View(news)
library(rvest)
url <- "http://media.daum.net/ranking/popular/"
text <- read_html(url)
news <- NULL
for(index in 1:50)
title <- html_text(html_nodes(text, paste0("#mArticle > div.rank_news > ul.list_news2 > li:nth-child(", index, ") > div.cont_thumb > strong > a")))
name <- html_text(html_nodes(text, paste0("#mArticle > div.rank_news > ul.list_news2 > li:nth-child(", index ,") > div.cont_thumb > strong > span")))
news <- data.frame(news)
news <- rbind(news,title,name)
write.csv(page, "daumnews.csv")
View(news)
library(rvest)
url <- "http://media.daum.net/ranking/popular/"
text <- read_html(url)
news <- NULL
for(index in 1:50)
title <- html_text(html_nodes(text, paste0("#mArticle > div.rank_news > ul.list_news2 > li:nth-child(", index, ") > div.cont_thumb > strong > a")))
name <- html_text(html_nodes(text, paste0("#mArticle > div.rank_news > ul.list_news2 > li:nth-child(", index ,") > div.cont_thumb > strong > span")))
page <- data.frame(title, name)
news <- rbind(page, news)
write.csv(page, "daumnews.csv")
View(news)
library(rvest)
url <- "http://media.daum.net/ranking/popular/"
text <- read_html(url)
news <- NULL
for(index in 1:50)
title <- html_text(html_nodes(text, paste0("#mArticle > div.rank_news > ul.list_news2 > li:nth-child(", index, ") > div.cont_thumb > strong > a")))
name <- html_text(html_nodes(text, paste0("#mArticle > div.rank_news > ul.list_news2 > li:nth-child(", index ,") > div.cont_thumb > strong > span")))
page <- data.frame(title, name)
news <- rbind(news, page)
write.csv(news, "daumnews.csv")
View(news)
library(rvest)
url <- "http://media.daum.net/ranking/popular/"
text <- read_html(url)
news <- NULL
for(index in 1:50){
title <- html_text(html_nodes(text, paste0("#mArticle > div.rank_news > ul.list_news2 > li:nth-child(", index, ") > div.cont_thumb > strong > a")))
name <- html_text(html_nodes(text, paste0("#mArticle > div.rank_news > ul.list_news2 > li:nth-child(", index ,") > div.cont_thumb > strong > span")))
page <- data.frame(title, name)
news <- rbind(news, page)
}
write.csv(news, "daumnews.csv")
View(news)
library(vest)
library(vrest)
library(rvest)
library(rvest)
site <- "https://comic.naver.com/genre/bestChallenge.nhn?&page="
naver_comic <- NULL
i <- 1
library(rvest)
site <- "https://comic.naver.com/genre/bestChallenge.nhn?&page="
naver_comic <- NULL
i <- 1
repeat{
text <- read._html(paste0(site,i))
comicName <- html_text(html_nodes(text,"table > tbody > tr > td:nth-child(1) > div.challengeInfo > h6 > a"))
}
library(rvest)
site <- "https://comic.naver.com/genre/bestChallenge.nhn?&page="
naver_comic <- NULL
i <- 1
repeat{
text <- read_html(paste0(site,i))
comicName <- html_text(html_nodes(text,"table > tbody > tr > td:nth-child(1) > div.challengeInfo > h6 > a"))
}
comicName
f
library(rvest)
site <- "https://comic.naver.com/genre/bestChallenge.nhn?&page="
naver_comic <- NULL
i <- 1
repeat{
text <- read_html(paste0(site,i))
comicName <- html_text(html_nodes(text,"table > tbody > tr > td > div.challengeInfo > h6 > a"))
}
comicName
comicName
library(rvest)
site <- "https://comic.naver.com/genre/bestChallenge.nhn?&page="
naver_comic <- NULL
i <- 1
repeat{
text <- read_html(paste0(site,i))
comicName <- html_text(html_nodes(text, "table > tbody > tr > td > div.challengeInfo > h6 > a"))
comicSummary <- html_text(html_nodes(text, ".summary"))
comicGrade <- html_text(html_nodes(text, ".star"))
if(length(comicName) == 0) break;
page <- data.frame(comicName, comicSummary, comicGrade)
naver_comic <- rbind(naver_comic, page)
}
write.csv(naver_comic, "navercomic.csv")
View(naver_comic)
content
library(rvest)
site <- "https://comic.naver.com/genre/bestChallenge.nhn?&page="
naver_comic <- NULL
i <- 1
repeat{
text <- read_html(paste0(site,i))
comicName <- html_text(html_nodes(text, "#content > div:nth-child(5) > table > tbody > tr > td:nth-child(1) > div.challengeInfo > h6 > a")
, trim = TRUE)
comicSummary <- html_text(html_nodes(text, ".summary"))
comicGrade <- html_text(html_nodes(text, ".star"))
if(length(comicName) == 0) break;
page <- data.frame(comicName, comicSummary, comicGrade)
naver_comic <- rbind(naver_comic, page)
}
write.csv(naver_comic, "navercomic.csv")
View(naver_comic)
library(rvest)
site <- "https://comic.naver.com/genre/bestChallenge.nhn?&page="
naver_comic <- NULL
i <- 1
repeat{
text <- read_html(paste0(site,i))
comicName <- html_text(html_nodes(text, "#content > div:nth-child(5) > table > tbody > tr > td:nth-child(1) > div.challengeInfo > h6 > a")
, trim = TRUE)
comicSummary <- html_text(html_nodes(text, ".summary"))
comicGrade <- html_text(html_nodes(text, ".star"))
if(length(comicName) == 0) break;
page <- data.frame(comicName, comicSummary, comicGrade)
naver_comic <- rbind(naver_comic, page)
i <- i + 1;
}
write.csv(naver_comic, "navercomic.csv")
View(naver_comic)
library(rvest)
site <- "https://comic.naver.com/genre/bestChallenge.nhn?&page="
naver_comic <- NULL
i <- 1
text <- read_html(paste0(site,i))
comicName <- html_text(html_nodes(text, "#content > div:nth-child(5) > table > tbody > tr > td:nth-child(1) > div.challengeInfo > h6 > a")
, trim = TRUE)
comicName
comicSummary <- html_text(html_nodes(text, ".summary"))
comicSummary
text
library(rvest)
site <- "https://comic.naver.com/genre/bestChallenge.nhn?&page="
naver_comic <- NULL
i <- 1
text <- read_html(paste0(site,i))
comicName <- html_text(html_nodes(text, "#content > div:nth-child(5) > table > tbody > tr > td:nth-child(1) > div.challengeInfo > h6 > a")
, trim = TRUE)
comicSummary <- html_text(html_nodes(text, ".summary"))
comicGrade <- html_text(html_nodes(text, ".star"))
comicSummary
comicGrade
comicGrade <- html_text(html_nodes(text, ".rating_typ > .star"))
comicGrade
comicGrade <- html_text(html_nodes(text, ".rating_type > .star"))
comicGrade
comicGrade <- html_text(html_nodes(text, "#content > div > table > tbody > tr > td > div.challengeInfo > div.rating_type > strong"))
comicGrade
comicGrade <- html_text(html_nodes(text, "td > div.challengeInfo > div.rating_type > strong"))
comicGrade
comicName <- html_text(html_nodes(text, "td > div.challengeInfo > h6 > a"), trim = TRUE)
comicName
library(rvest)
site <- "https://comic.naver.com/genre/bestChallenge.nhn?&page="
naver_comic <- NULL
i <- 1
repeat{
text <- read_html(paste0(site,i))
comicName <- html_text(html_nodes(text, "td > div.challengeInfo > h6 > a"), trim = TRUE)
comicSummary <- html_text(html_nodes(text, ".summary"))
comicGrade <- html_text(html_nodes(text, "td > div.challengeInfo > div.rating_type > strong"))
if(length(comicName) == 0) break;
page <- data.frame(comicName, comicSummary, comicGrade)
naver_comic <- rbind(naver_comic, page)
i <- i + 1;
}
write.csv(naver_comic, "navercomic.csv")
View(naver_comic)
library(rvest)
site <- "https://comic.naver.com/genre/bestChallenge.nhn?&page="
naver_comic <- NULL
i <- 1
repeat{
text <- read_html(paste0(site,i))
comicName <- html_text(html_nodes(text, "td > div.challengeInfo > h6 > a"), trim = TRUE)
comicSummary <- html_text(html_nodes(text, ".summary"))
comicGrade <- html_text(html_nodes(text, "td > div.challengeInfo > div.rating_type > strong"))
if(length(comicName) == 0) break;
page <- data.frame(comicName, comicSummary, comicGrade)
naver_comic <- rbind(naver_comic, page)
i <- i + 1;
}
write.csv(naver_comic, "navercomic.csv")
View(naver_comic)
library(rvest)
site <- "https://comic.naver.com/genre/bestChallenge.nhn?&page="
naver_comic <- NULL
i <- 1
j <- 0
repeat{
text <- read_html(paste0(site,i))
ctext <- read_html(paste0(site,j))
if(text == ctext){
break;
}
comicName <- html_text(html_nodes(text, "td > div.challengeInfo > h6 > a"), trim = TRUE)
comicSummary <- html_text(html_nodes(text, ".summary"))
comicGrade <- html_text(html_nodes(text, "td > div.challengeInfo > div.rating_type > strong"))
page <- data.frame(comicName, comicSummary, comicGrade)
naver_comic <- rbind(naver_comic, page)
i <- i + 1;
j <- j + 1;
}
write.csv(naver_comic, "navercomic.csv")
View(naver_comic)
View(naver_comic)
library(rvest)
site <- "https://comic.naver.com/genre/bestChallenge.nhn?&page="
naver_comic <- NULL
i <- 1
repeat{
if(i == 125) break;
text <- read_html(paste0(site,i))
comicName <- html_text(html_nodes(text, "td > div.challengeInfo > h6 > a"), trim = TRUE)
comicSummary <- html_text(html_nodes(text, ".summary"))
comicGrade <- html_text(html_nodes(text, "td > div.challengeInfo > div.rating_type > strong"))
page <- data.frame(comicName, comicSummary, comicGrade)
naver_comic <- rbind(naver_comic, page)
i <- i + 1;
}
write.csv(naver_comic, "navercomic.csv")
View(naver_comic)
library(rvest)
site <- "https://comic.naver.com/genre/bestChallenge.nhn?&page="
naver_comic <- NULL
i <- 1
repeat{
text <- read_html(paste0(site,i))
comicName <- html_text(html_nodes(text, "td > div.challengeInfo > h6 > a"), trim = TRUE)
comicSummary <- html_text(html_nodes(text, ".summary"))
comicGrade <- html_text(html_nodes(text, "td > div.challengeInfo > div.rating_type > strong"))
page <- data.frame(comicName, comicSummary, comicGrade)
if(df.duplicated['page','naver_comic']){
break;
}
naver_comic <- rbind(naver_comic, page)
i <- i + 1;
}
write.csv(naver_comic, "navercomic.csv")
View(naver_comic)
library(rvest)
site <- "https://comic.naver.com/genre/bestChallenge.nhn?&page="
naver_comic <- NULL
i <- 1
repeat{
text <- read_html(paste0(site,i))
comicName <- html_text(html_nodes(text, "td > div.challengeInfo > h6 > a"), trim = TRUE)
comicSummary <- html_text(html_nodes(text, ".summary"))
comicGrade <- html_text(html_nodes(text, "td > div.challengeInfo > div.rating_type > strong"))
page <- data.frame(comicName, comicSummary, comicGrade)
if(data.duplicated['page','naver_comic']){
break;
}
naver_comic <- rbind(naver_comic, page)
i <- i + 1;
}
write.csv(naver_comic, "navercomic.csv")
View(naver_comic)
