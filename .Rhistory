query <- "select *from emp"
emp <- dbGetQuery(conn, query)
# 문제0
query <- "update emp set comm = NA where comm < 0"
drv <- JDBC(driverClass = 'org.mariadb.jdbc.Driver', 'mariadb-java-client-2.6.2.jar')
conn <- dbConnect(drv, 'jdbc:mariadb://127.0.0.1:3306/work', 'scott', 'tiger')
library(dplyr)
emp <- dbReadTable(conn, "emp")
# 문제0
query <- "update emp set comm = NA where comm < 0"
dbSendQuery(conn, query)
query <- "select *from emp"
emp <- dbGetQuery(conn, query)
emp
# 문제0
query <- "update emp set comm = NA where comm < 0"
dbSendQuery(conn, query)
query = "insert into goods2 values(6, 'test', 1, 1000)"
dbSendUpdate(conn, query)
query = "select *from goods2"
goodsAll <- dbGetQuery(conn, query)
goodsAll
# 문제0
query <- "update emp set comm = NA where comm < 0"
dbSendQuery(conn, query)
# 문제0
emp$comm
# 문제0
if(emp$comm <0) emp$comm <- NA
# 문제0
if(emp$comm <0) comm <- NA
# 문제0
if(emp$comm <0) a <- 1
if(emp$comm <0)
d
str(emp$comm <0)
emp$comm
emp
drv <- JDBC(driverClass = 'org.mariadb.jdbc.Driver', 'mariadb-java-client-2.6.2.jar')
conn <- dbConnect(drv, 'jdbc:mariadb://127.0.0.1:3306/work', 'scott', 'tiger')
library(dplyr)
emp <- dbReadTable(conn, "emp")
emp
emp$comm
comm
# 문제0
query <- "update emp set comm = 1 where comm < 0"
emp <- dbSendQuery(conn, query)
emp
emp
drv <- JDBC(driverClass = 'org.mariadb.jdbc.Driver', 'mariadb-java-client-2.6.2.jar')
conn <- dbConnect(drv, 'jdbc:mariadb://127.0.0.1:3306/work', 'scott', 'tiger')
library(dplyr)
emp <- dbReadTable(conn, "emp")
emp
drv <- JDBC(driverClass = 'org.mariadb.jdbc.Driver', 'mariadb-java-client-2.6.2.jar')
conn <- dbConnect(drv, 'jdbc:mariadb://127.0.0.1:3306/work', 'scott', 'tiger')
library(dplyr)
emp <- dbReadTable(conn, "emp")
emp
drv <- JDBC(driverClass = 'org.mariadb.jdbc.Driver', 'mariadb-java-client-2.6.2.jar')
conn <- dbConnect(drv, 'jdbc:mariadb://127.0.0.1:3306/work', 'scott', 'tiger')
library(dplyr)
emp <- dbReadTable(conn, "emp")
emp
drv <- JDBC(driverClass = 'org.mariadb.jdbc.Driver', 'mariadb-java-client-2.6.2.jar')
conn <- dbConnect(drv, 'jdbc:mariadb://127.0.0.1:3306/work', 'scott', 'tiger')
library(dplyr)
emp <- dbReadTable(conn, "emp")
emp
drv <- JDBC(driverClass = 'org.mariadb.jdbc.Driver', 'mariadb-java-client-2.6.2.jar')
conn <- dbConnect(drv, 'jdbc:mariadb://127.0.0.1:3306/work', 'scott', 'tiger')
library(dplyr)
emp <- dbReadTable(conn, "emp")
# 문제0
query <- "update emp set comm = NA where comm < 2"
dbSendQuery(conn, query)
emp <- dbReadTable(conn, "emp")
drv <- JDBC(driverClass = 'org.mariadb.jdbc.Driver', 'mariadb-java-client-2.6.2.jar')
conn <- dbConnect(drv, 'jdbc:mariadb://127.0.0.1:3306/work', 'scott', 'tiger')
library(dplyr)
emp <- dbReadTable(conn, "emp")
# 문제0
query <- "update emp set comm = NULL where comm < 2"
dbSendQuery(conn, query)
emp <- dbReadTable(conn, "emp")
emp
drv <- JDBC(driverClass = 'org.mariadb.jdbc.Driver', 'mariadb-java-client-2.6.2.jar')
conn <- dbConnect(drv, 'jdbc:mariadb://127.0.0.1:3306/work', 'scott', 'tiger')
library(dplyr)
emp <- dbReadTable(conn, "emp")
# 문제0
query <- "update emp set comm = NULL where comm < 0"
dbSendQuery(conn, query)
emp <- dbReadTable(conn, "emp")
emp
emp %>%
filter(comm != NA) %>%
count()
emp
emp %>%
filter(comm != NA) %>%
count()
emp %>%
filter(comm != NULL) %>%
count()
emp %>%
filter(comm != NA) %>%
count()
emp %>%
filter(comm != NA)
emp %>%
filter(comm > 0) %>%
count()
drv <- JDBC(driverClass = 'org.mariadb.jdbc.Driver',
'mariadb-java-client-2.6.2.jar')
conn <- dbConnect(drv, "jdbc:mysql://localhost:3306/work", "scott", "tiger")
library(rJava)
library(RJDBC)
library(DBI)
drv <- JDBC(driverClass = 'org.mariadb.jdbc.Driver',
'mariadb-java-client-2.6.2.jar')
conn <- dbConnect(drv, "jdbc:mysql://localhost:3306/work", "scott", "tiger")
library(rJava)
library(RJDBC)
library(DBI)
drv <- JDBC(driverClass = 'org.mariadb.jdbc.Driver',
'mariadb-java-client-2.6.2.jar')
conn <- dbConnect(drv, "jdbc:mysql://localhost:3306/work", "scott", "tiger")
day1 <- format(Sys.Date(),"오늘은 %Y년 %B %d일")
day2 <- as.Date("2020-09-23") - as.Date("1990-04-11")
day2 <- grep("\\d", day2, value = T)
cat(paste0(today, "이고 내가 태어난지 ", day2, "일째되는 날이다"), "\n")
day1 <- format(Sys.Date(),"오늘은 %Y년 %B %d일")
day2 <- as.Date("2020-09-23") - as.Date("1990-04-11")
day2 <- grep("\\d", day2, value = T)
cat(paste0(day1, "이고 내가 태어난지 ", day2, "일째되는 날이다"), "\n")
unclass(day2)
text <- "Happy Birthday to You"
v1 <- unlist(strsplit(text, " "))
length(v1)
nchar(v1)
sum(nchar(v1))
v2 <- paste0(v1)
v2
v2 <- paste0(v1, collape = " ")
v2
# 문제9
text <- "Good Morning"
strsplit(x = text, split = " ")
unlist(strsplit(x = text, split = " "))
strsplit(unlist(strsplit(x = text, split = " ")), split = " ")
text <- c("Yesterday is history, tommrrow is a mystery, today is a gift!",
"That's why we call it the present - from kung fu Panda")
text <- gsub("[,-]", "", text)
text
text <- gsub("\\s+", " ", text)
text
text <- c("Yesterday is history, tommrrow is a mystery, today is a gift!",
"That's why we call it the present - from kung fu Panda")
text <- gsub("[,-]", "", text)
text <- strsplit(text, " ")
text
text <- c("Yesterday is history, tommrrow is a mystery, today is a gift!",
"That's why we call it the present - from kung fu Panda")
text <- gsub("[,-]", "", text)
text <- gsub("\\s+", " ", text)
text <- strsplit(text, " ")
text
# 문제11
ssn <- c("941215-1234567","850605-2345678","760830-1357913")
substr(ssn, nchar(ssn)-6, nchar(ssn))
substr(ssn, nchar(ssn)-3, nchar(ssn))
substr(ssn, nchar(ssn)-1, nchar(ssn))
s1 <- "@^^@Have a nice day!! 좋은 하루!! 오늘도 100점 하루...."
r3 <- gsub("[[:punct:][가-힣]]", "", s1)
r3
library(rJava)
library(RJDBC)
library(DBI)
library(dplyr)
drv <- JDBC(driverClass = 'org.mariadb.jdbc.Driver', 'mariadb-java-client-2.6.2.jar')
conn <- dbConnect(drv, 'jdbc:mariadb://127.0.0.1:3306/work', 'scott', 'tiger')
emp <- dbReadTable(conn, "emp")
emp
emp %>%
mutate(comm = ifelse(comm <0, NA, comm)) -> emp
emp
emp %>%
mutate(mgr = ifelse(mgr <0, NA, mgr)) -> emp
emp
emp %>%
filter(job %in% c("SALESMAN", "ANALYST")) %>%
select(ename, job)
emp %>%
filter(job == "SALESMAN"| job == "ANALYST") %>%
select(ename, job)
# 문제10
emp %>% arrange(sal)
emp %>%
count(deptno) %>%
arrange(n) %>%
tail(1) %>%
select(deptno)
emp %>%
filter(!is.na(comm)) %>%
count()
str(mpg)
mpg
str(mpg)
mpg %>%
group_by(manufacturer, drv)
mpg %>%
group_by(manufacturer, drv) %>%      # 회사별, 구방방식별 분리
summarise(mean_cty = mean(cty)) %>%  # cty 평균 산출
head(10)
mpg %>%
group_by(manufacturer) %>%           # 회사별로 분리
filter(class == "suv") %>%           # suv 추출
mutate(tot = (cty+hwy)/2) %>%        # 통합 연비 변수 생성
summarise(mean_tot = mean(tot)) %>%  # 통합 연비 평균 산출
arrange(desc(mean_tot)) %>%          # 내림차순 정렬
head(5)
# 문제1
# 1-1
str(mpg)
#1-2
nrow(mpg)
ncol(mpg)
# 1-3
head(mpg, 10)
# 1-4
tail(mpg, 10)
# 1-5
GUI(mpg)
library(dplyr)
library(ggplot2)
str(ggplot2::mpg)
mpg <- as.data.frame(ggplot2::mpg)
# 문제1
# 1-1
str(mpg)
# 1-2
nrow(mpg)
ncol(mpg)
# 1-3
head(mpg, 10)
# 1-4
tail(mpg, 10)
# 1-5
GUI
# 1-6
summarise(mpg, row)
# 문제1
# 1-1
str(mpg)
# 1-7
mpg %>%
arrange(manufacturer) %>% fally
# 1-7
mpg %>%
arrange(manufacturer) %>% tally
# 1-7
mpg %>%
arrange(manufacturer) %>%
tally
mpg %>%
arrange(manufacturer) %>%
# 1-7
mpg %>%
arrange(manufacturer) %>%
tally
mpg %>%
arrange(manufacturer)
# 1-7
mpg %>% tally(manufacturer)
# 1-7
mpg %>%
select(manufacturer) %>%
tally
mpg %>%
select(manufacturer)
# 1-7
mpg %>%
group_by(manufacturer) %>%
tally
# 1-8
mpg %>%
group_by(manufacturer, model) %>%
summarise(n = n())
###### 문제2
# 2-1
mpg %>%
rename(city = cty, highway = hwy) -> mpg2
mpg2
# 2-2
mpg2 %>%
group_by(manufacturer, model) %>%
arrange(displ) %>%
head(6)
# 2-2
mpg2 %>%
filter(manufacturer = audi & model = a4)
# 2-2
mpg2 %>%
filter(manufacturer == "audi" & model == "a4")
arrange(displ) %>%
head(1)
arrange(displ) %>%
head(2)
mpg2 %>%
filter(manufacturer == "audi" & model == "a4")
arrange(displ) %>%
head(2)
mpg2 %>%
filter(manufacturer == "audi" & model == "a4")
arrange(displ) %>%
head(2)
mpg %>%
rename(city = cty, highway = hwy) -> mpg2
mpg2
mpg2
mpg2 %>%
filter(manufacturer == "audi" & model == "a4") %>%
arrange(displ) %>%
head(6)
midwest
str(midwest)
midwest <- as.data.frame(ggplot2::midwest)
str(midwest)
summary(midwest)
# 3-2
midwest %>%
rename(total = poptotal, asian = popasian)
# 3-3
midwest %>%
mutate(a_ratio = (asian / total))
midwest
midwest %>%
rename(total = poptotal, asian = popasian) -> midwest
# 3-3
midwest %>%
mutate(a_ratio = (asian / total))
midwest %>%
mutate(a_ratio = (asian / total))
# 3-3
midwest %>%
mutate(a_ratio = (asian / total)) -> midwest
# 3-4
midwest %>%
mutate(population = ifelse(a_ratio > mean(a_ratio), "large", "small"))
###### 문제4
# 4-1
mean(mpg %>% filter(diispl <= 4))
###### 문제4
# 4-1
mean(mpg %>% filter(diispl <= 4))
###### 문제4
# 4-1
mean(mpg %>% filter(displ <= 4))
mpg %>% filter(displ <= 4)
###### 문제4
# 4-1
mpg %>%
filter(displ <= 4) %>%
mean(hwy)
mpg
###### 문제4
# 4-1
mpg %>%
filter(displ <= 4) %>%
select(hwy)
###### 문제4
# 4-1
mpg %>%
filter(displ <= 4) %>%
mean(hwy)
###### 문제1
# 1-1
str(mpg)
###### 문제4
# 4-1
mpg %>%
filter(displ <= 4) %>%
mean(as.numeric(hwy))
###### 문제4
# 4-1
mpg %>%
filter(displ <= 4) %>%
mean(as.numeric(hwy))
as.numeric(hwy)
###### 문제4
# 4-1
mpg %>%
filter(displ <= 4) %>%
as.numeric(mpg$hwy) %>%
mean(hwy)
exam
str(exam)
###### 문제4
# 4-1
mpg %>%
filter(displ <= 4) %>%
mutate(mean_hwy = mean(hwy))
exam %>% summarise(mean_math = mean(math))
mpg %>%
filter(displ <= 4) %>%
summarise(mean_hwy = mean(hwy))
mpg %>%
filter(displ >= 5) %>%
summarise(mean(hwy))
mpg %>%
filter(displ <= 4) %>%
summarise(mean(hwy)) -> displ4
mpg %>%
filter(displ >= 5) %>%
summarise(mean(hwy)) -> displ5
max(displ4, displ5)
max(mpg %>% filter(displ <= 4) %>% summarise(mean(hwy)),
mpg %>% filter(displ >= 5) %>% summarise(mean(hwy)))
# 4-2
mpg %>%
filter(manufacturer == "audi") %>%
surmmarise(mean(cty))
# 4-2
mpg %>%
filter(manufacturer == "audi") %>%
summarise(mean(cty))
mpg %>%
filter(manufacturer == "toyota") %>%
summarise(mean(cty))
# 4-3
mpg %>%
filter(manufacturer %in% c("chevrolet", "ford", "honda")) %>%
summarise(mean(hwy))
mpg %>%
filter(manufacturer %in% c("chevrolet", "ford", "honda"))
###### 문제5
# 5-1
mpg %>%
select(class, cty) -> mpg3
head(mpg3)
# 5-2
mpg3 %>%
filter(class == "suv") %>%
summarise(mean(cty))
mpg3 %>%
filter(class == "compact") %>%
summarise(mea(cty))
mpg3 %>%
filter(class == "compact") %>%
summarise(mean(cty))
###### 문제6
# 6-1
mpg %>%
filter(manufaturer == "audi") %>%
group_by(model) %>%
arrange(hwy)
###### 문제6
# 6-1
mpg %>%
filter(manufacturer == "audi") %>%
group_by(model) %>%
arrange(hwy)
###### 문제6
# 6-1
mpg %>%
filter(manufacturer == "audi") %>%
arrange(model, hwy) %>%
tail(5)
mpg %>%
filter(manufacturer == "audi") %>%
arrange(model, hwy)
mpg %>%
filter(manufacturer == "audi") %>%
arrange(hwy)
mpg %>%
filter(manufacturer == "audi") %>%
arrange(hwy) %>%
tail(5)
###### 문제6
# 6-1
mpg %>%
filter(manufacturer == "audi") %>%
arrange(desc(hwy)) %>%
head(5)
test1 <- data.frame(id = c(1, 2, 3, 4, 5, 6),
midterm = c(60, 80, 70, 90, 85, 100))
# 기말고사 데이터 생성
test2 <- data.frame(id = c(1, 5, 3, 4, 2, 7),
final = c(70, 80, 65, 95, 83, 0))
exam
test1 <- data.frame(id = c(1, 2, 3, 4, 5, 6),
midterm = c(60, 80, 70, 90, 85, 100))
# 기말고사 데이터 생성
test2 <- data.frame(id = c(1, 5, 3, 4, 2, 7),
final = c(70, 80, 65, 95, 83, 0))
# id 기준으로 합치기
total <- full_join(test1, test2, by = "id")  # id 기준으로 합쳐 total에 할당
# 다른 데이터 활용해 변수 추가하기
# 반별 담임교사 명단 생성
name <- data.frame(class = c(1, 2, 3, 4, 5), teacher = c("kim", "lee", "park", "choi", "jung"))
df <- data.frame(sex = c("M", "F", NA, "M", "F"),
score = c(5, 4, 3, 4, NA))
df
# 결측치 확인하기
is.na(df)         # 결측치 확인
table(is.na(df))  # 결측치 빈도 출력
df %>% filter(is.na(score))   # score가 NA인 데이터만 출력
df %>% filter(!is.na(score))  # score 결측치 제거
# 1-6
sapply(mpg)
