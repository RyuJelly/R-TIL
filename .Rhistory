i="A 등급")
}else if(score>=80 & score<=89){
for (i in 80:89)
level = switch(EXPR=score,
i="B 등급")
}else if(score>=70 & score<=79){
for (i in 70:79)
level = switch(EXPR=score,
i="C 등급")
}else if(score>=60 & score<=69){
for (i in 60:69)
level = switch(EXPR=score,
i="D 등급")
}else{
for (i in 1:59)
level = switch(EXPR=score,
i="F 등급")
}
print(score,"점은 ", level,"입니다.")      # (3)
count <- sample(3:10,1)                   # (1)
deco <- sample(1:3,1)                     # (2)
if (deco==1){                             # (3)
for(i in 1:count)
cat("*")
}else if (deco==2){
for(i in 1:count)
cat("$")
}else{
for(i in 1:count)
cat("#")
}
# 문제4
score <- sample(0:100,1)                   # (1)
score <- as.character(score)               # (2)
if(score>=90 & score<=100){
for (i in 90:100)
level = switch(EXPR=score,
i="A 등급")
}else if(score>=80 & score<=89){
for (i in 80:89)
level = switch(EXPR=score,
i="B 등급")
}else if(score>=70 & score<=79){
for (i in 70:79)
level = switch(EXPR=score,
i="C 등급")
}else if(score>=60 & score<=69){
for (i in 60:69)
level = switch(EXPR=score,
i="D 등급")
}else{
for (i in 1:59)
level = switch(EXPR=score,
i="F 등급")
}
score
level
level
score <- sample(0:100,1)                   # (1)
score <- as.character(score)               # (2)
if(score>=90 & score<=100){
for (i in 90:100)
level = switch(EXPR=score,
"i"="A 등급")
}else if(score>=80 & score<=89){
for (i in 80:89)
level = switch(EXPR=score,
"i"="B 등급")
}else if(score>=70 & score<=79){
for (i in 70:79)
level = switch(EXPR=score,
"i"="C 등급")
}else if(score>=60 & score<=69){
for (i in 60:69)
level = switch(EXPR=score,
"i"="D 등급")
}else{
for (i in 1:59)
level = switch(EXPR=score,
"i"="F 등급")
}
print(score,"점은 ", level,"입니다.")
score
level
score <- as.character(score)
score
score <- sample(0:100,1)
score
score <- sample(0:100,1)                   # (1)
#score <- as.character(score)               # (2)
if(score>=90 & score<=100){
for (i in 90:100)
level = switch(EXPR=score,
i,"A 등급")
}else if(score>=80 & score<=89){
for (i in 80:89)
level = switch(EXPR=score,
i,"B 등급")
}else if(score>=70 & score<=79){
for (i in 70:79)
level = switch(EXPR=score,
i,"C 등급")
}else if(score>=60 & score<=69){
for (i in 60:69)
level = switch(EXPR=score,
i,"D 등급")
}else{
for (i in 1:59)
level = switch(EXPR=score,
i,"F 등급")
}
score <- sample(0:100,1)                   # (1)
# (2)
if(score>=90 & score<=100){
for (i in 90:100)
level = switch(EXPR=score,
i,"A 등급")
}else if(score>=80 & score<=89){
for (i in 80:89)
level = switch(EXPR=score,
i,"B 등급")
}else if(score>=70 & score<=79){
for (i in 70:79)
level = switch(EXPR=score,
i,"C 등급")
}else if(score>=60 & score<=69){
for (i in 60:69)
level = switch(EXPR=score,
i,"D 등급")
}else{
for (i in 1:59)
level = switch(EXPR=score,
i,"F 등급")
}
print(score,"점은 ", level,"입니다.")
level
score <- sample(0:100,1)                   # (1)
score <- as.character(score)               # (2)
if(score>=90 & score<=100){
for (i in 90:100)
level = switch(EXPR=score,
"score"="A 등급")
}else if(score>=80 & score<=89){
for (i in 80:89)
level = switch(EXPR=score,
"score"="B 등급")
}else if(score>=70 & score<=79){
for (i in 70:79)
level = switch(EXPR=score,
"score"="C 등급")
}else if(score>=60 & score<=69){
for (i in 60:69)
level = switch(EXPR=score,
"score"="D 등급")
}else{
for (i in 1:59)
level = switch(EXPR=score,
"score"="F 등급")
}
print(score,"점은 ", level,"입니다.")
score <- sample(0:100,1)                   # (1)
score <- as.character(score)               # (2)
if(score>=90 & score<=100){
for (i in 90:100)
level = switch(EXPR=score,
score="A 등급")
}else if(score>=80 & score<=89){
for (i in 80:89)
level = switch(EXPR=score,
score="B 등급")
}else if(score>=70 & score<=79){
for (i in 70:79)
level = switch(EXPR=score,
score="C 등급")
}else if(score>=60 & score<=69){
for (i in 60:69)
level = switch(EXPR=score,
score="D 등급")
}else{
for (i in 1:59)
level = switch(EXPR=score,
score="F 등급")
}
print(score,"점은 ", level,"입니다.")
score <- sample(0:100,1)                   # (1)
score <- as.character(score)               # (2)
if(score>=90 & score<=100){
for (i in 90:100)
level = switch(EXPR=score,
i="A 등급")
}else if(score>=80 & score<=89){
for (i in 80:89)
level = switch(EXPR=score,
i="B 등급")
}else if(score>=70 & score<=79){
for (i in 70:79)
level = switch(EXPR=score,
i="C 등급")
}else if(score>=60 & score<=69){
for (i in 60:69)
level = switch(EXPR=score,
i="D 등급")
}else{
for (i in 1:59)
level = switch(EXPR=score,
i="F 등급")
}
print(score,"점은 ", level,"입니다.")
score <- sample(0:100,1)                   # (1)
score <- as.character(score)               # (2)
level <- switch(EXPR=score,
"100"=,"99"=,"98"=,"97"=,"96"=,"95"=,"94"=,"93"=,"92"=,"91"=,"90"="A 등급",
"89"=,"88"=,"87"=,"86"=,"85"=,"84"=,"83"=,"82"=,"81"=,"80"="B 등급",
"79"=,"78"=,"77"=,"76"=,"75"=,"74"=,"73"=,"72"=,"71"=,"70"="C 등급",
"69"=,"68"=,"67"=,"66"=,"65"=,"64"=,"63"=,"62"=,"61"=,"60"="D 등급",
"F 등급")
print(score,"점은 ", level,"입니다.")
month <- sample(1:12,1)
month
month <- paste(month,"월",sep="")
month
score <- sample(0:100,1)                   # (1)
score <- as.character(score)               # (2)
level <- switch(EXPR=score,
"100"=,"99"=,"98"=,"97"=,"96"=,"95"=,"94"=,"93"=,"92"=,"91"=,"90"="A 등급",
"89"=,"88"=,"87"=,"86"=,"85"=,"84"=,"83"=,"82"=,"81"=,"80"="B 등급",
"79"=,"78"=,"77"=,"76"=,"75"=,"74"=,"73"=,"72"=,"71"=,"70"="C 등급",
"69"=,"68"=,"67"=,"66"=,"65"=,"64"=,"63"=,"62"=,"61"=,"60"="D 등급",
"F 등급")
level
result
level
score
print(score,"점은 ", level,"입니다.")
print(score,"점은 ", "level","입니다.")
cat(score,"점은 ", level,"입니다.")      # (3)
print(score,"점은 ", level,"입니다.")      # (3)
cat(score,"점은 ", level,"입니다.")      # (3)
score <- sample(0:100,1)                   # (1)
score <- as.character(score)
if(score>=90 & score<=100){
for (i in 90:100)
level = switch(EXPR=score,
i="A 등급")
}else if(score>=80 & score<=89){
for (i in 80:89)
level = switch(EXPR=score,
i="B 등급")
}else if(score>=70 & score<=79){
for (i in 70:79)
level = switch(EXPR=score,
i="C 등급")
}else if(score>=60 & score<=69){
for (i in 60:69)
level = switch(EXPR=score,
i="D 등급")
}else{
for (i in 1:59)
level = switch(EXPR=score,
i="F 등급")
}
cat(score,"점은 ", level,"입니다.")
score <- sample(0:100,1)                   # (1)
score <- as.character(score)               # (2)
level <- switch(EXPR=score,
"100"=,"99"=,"98"=,"97"=,"96"=,"95"=,"94"=,"93"=,"92"=,"91"=,"90"="A 등급",
"89"=,"88"=,"87"=,"86"=,"85"=,"84"=,"83"=,"82"=,"81"=,"80"="B 등급",
"79"=,"78"=,"77"=,"76"=,"75"=,"74"=,"73"=,"72"=,"71"=,"70"="C 등급",
"69"=,"68"=,"67"=,"66"=,"65"=,"64"=,"63"=,"62"=,"61"=,"60"="D 등급",
"F 등급")
cat(score,"점은 ", level,"입니다.")
print(score,"점은 ", level,"입니다.")
cat(score,"점은 ", level,"입니다.")      # (3)
exam1 <- function(){
a <- (Letters + letters)
return(a)
}
exam1
exam1
f9 <- function(p1, ..., p2="ㅋ") {
cat("p1=", p1, "\n")
cat("가변형 = ", ..., "\n")
cat("p2=", p2, "\n")
}
f9(10)
f9(10,20)
f9(10,20,30)
f9(10,20,30,40)
test1 <-function(p){
cat("난 수행함\n")
testError1(-1)
cat("나 수행할 까요? \n")
}
test1()
#try()
test2 <- function(p){
cat("난 수행함\n")
try(testError(-1))
cat("나 수행할 까요? \n")
}
test2()
a
testSleep <- function(x) {
for(data in 6:10) {
cat(data,"\n")
if(x)
Sys.sleep(1)
}
return()
}
testSleep(FALSE)
testSleep(TRUE)
a <- (Letters + letters)
exam1 <- function(){
a <- (LETTERS + letters)
return(a)
}
exam1
exam1
exam1()
exam1 <- function(){
a <- paste(LETTERS + letters)
return(a)
}
exam1()
exam1 <- function(){
a <- paste(LETTERS, letters, sep="")
return(a)
}
exam1()
exam2 <- function(x){
sum <- 0;
for(i in 1:x)
sum <- sum+ i;
return(sum)
}
exam(5); exam(10); exam(100)
exam2(5); exam2(10); exam2(100)
exam3 <- function(x,y){
a <- abs(x-y)
return(a)
}
exam3(10,5)
exam3(10,5); exam3(5,10)
exam3(10,5); exam3(5,10); exam3(10,10)
exam5 <- function(x,y="#"){
if (x >0){
for (i in 1:x){
cat(y)
}
}
return()
}
exam5(10,"@")
exam5(10,"@"); exam5(-2)
exam5(10,"@"); exam5(-2); exam5(8)
exam5 <- function(x,y="#"){
if (x >0){
for (i in 1:x){
cat(y)
}
}
#return()
}
exam5(10,"@"); exam5(-2); exam5(8)
exam5 <- function(x,y="#"){
if (x >0){
for (i in 1:x){
cat(y)
}
}
return()
}
exam5(10,"@"); exam5(-2); exam5(8)
exam5 <- function(x,y="#"){
if (x >0){
for (i in 1:x){
cat(y)
}
}
return(NULL)
}
exam5(10,"@"); exam5(-2); exam5(8)
exam6 <- function(...){
if (... == is.NA){
print("NA는 출력불가")
}else if(... >= 85){
grade <- "상"
print(..., "점은 ",grade ,"등급입니다.",sep='')
}else if(... >= 70){
grade <- "중"
print(..., "점은 ",grade ,"등급입니다.",sep='')
}else{
grade <- "하"
print(..., "점은 ",grade ,"등급입니다.",sep='')
}
}
exam6(80,50,70,66,NA,35)
exam6 <- function(...){
if (is.NA(...)){
print("NA는 출력불가")
}else if(... >= 85){
grade <- "상"
print(..., "점은 ",grade ,"등급입니다.",sep='')
}else if(... >= 70){
grade <- "중"
print(..., "점은 ",grade ,"등급입니다.",sep='')
}else{
grade <- "하"
print(..., "점은 ",grade ,"등급입니다.",sep='')
}
}
exam6(80,50,70,66,NA,35)
exam6 <- function(...){
if (is.na(...)){
print("NA는 출력불가")
}else if(... >= 85){
grade <- "상"
print(..., "점은 ",grade ,"등급입니다.",sep='')
}else if(... >= 70){
grade <- "중"
print(..., "점은 ",grade ,"등급입니다.",sep='')
}else{
grade <- "하"
print(..., "점은 ",grade ,"등급입니다.",sep='')
}
}
exam6(80,50,70,66,NA,35)
exam6 <- function(...){
if(... >= 85){
grade <- "상"
print(..., "점은 ",grade ,"등급입니다.",sep='')
}else if(... >= 70){
grade <- "중"
print(..., "점은 ",grade ,"등급입니다.",sep='')
}else{
grade <- "하"
print(..., "점은 ",grade ,"등급입니다.",sep='')
}
}
exam6(80,50,70,66,35)
exam6(80,50,70,66,35)
library() # 설치된 패키지 리스트
installed.packages()
search()
read_excel()
install.packages("readxl")
install.packages("rvest")
install.packages("XML")
install.packages("httr")
install.packages("readr")
install.packages("readr")
excel_data_ex <- read_excel("data/data_ex.xlsx")
library(readxl) # require(readxl)
excel_data_ex <- read_excel("data/data_ex.xlsx")
library() # 설치된 패키지 리스트
search()
read_excel()
install.packages("readxl")
library(readxl) # require(readxl)
excel_data_ex <- read_excel("data/data_ex.xlsx")
getwd()
View(excel_data_ex)
search()
excel_data_ex
install.packages("rvest")
install.packages("XML")
install.packages("httr")
install.packages("readr")
search()
library() # 설치된 패키지 리스트
# 정적 웹 크롤링과 스크래핑
library(rvest)
url <- "http://unico2013.dothome.co.kr/crawling/tagstyle.html"
text <- read_html(url)
text
nodes <- html_nodes(text, "div")
nodes
title <- html_text(nodes)
title
node1 <- html_nodes(text, "div:nth-of-type(1)")
node1
html_text(node1)
html_attr(node1, "style")
node2 <- html_nodes(text, "div:nth-of-type(2)")
node2
html_text(node2)
html_attr(node2, "style")
node3 <- html_nodes(text, "div:nth-of-type(3)")
node3
html_text(node3)
node2
# 단일 페이지(rvest 패키지 사용)
text<- NULL; title<-NULL; point<-NULL; review<-NULL; page=NULL
text<- NULL; title<-NULL; point<-NULL; review<-NULL; page=NULL
url<- "http://movie.naver.com/movie/point/af/list.nhn?page=1"
text <- read_html(url,  encoding="CP949")
text
# 영화제목
nodes <- html_nodes(text, ".movie")
title <- html_text(nodes)
title
nodes <- html_nodes(text, ".title em")
point <- html_text(nodes)
point
# 영화리뷰
nodes <- html_nodes(text, xpath="//*[@id='old_content']/table/tbody/tr/td[2]/text()")
nodes <- html_text(nodes, trim=TRUE)
nodes
review <- nodes[nchar(nodes) > 0]
review
library() # 설치된 패키지 리스트
