strptime(x1, "%Y-%m-%d %H:%M:%S")
strptime('2019-08-21 14:10:30', "%Y-%m-%d %H:%M:%S")
# 문제3
as.Date(Sys.Date(), "%Y년 %B %d %H시:%M분:%S초")
# 문제3
strptime(Sys.Date(), "%Y년 %B %d %H시:%M분:%S초")
# 문제3
p <- Sys.Date()
strptime(p, "%Y년 %B %d %H시:%M분:%S초")
p
strptime(p, format("%Y년 %B %d %H시:%M분:%S초"))
strptime(p,"%Y-%m-%d %H:%M:%초")
# 문제3
p <- Sys.Date()
strptime(p,"%Y-%m-%d %H:%M:%초")
t<-Sys.time()
ct<-as.POSIXct(t)
lt<-as.POSIXlt(t)
str(ct)
str(lt)
unclass(ct)
unclass(lt)
lt$mon+1
# 문제3
p <- Sys.time()
strptime(p,"%Y-%m-%d %H:%M:%초")
# 문제3
p <- Sys.time()
p
as.POSIXTlt(p)
as.POSIXlt(p)
as.POSIXlt(Sys.time())
format(p, "%Y년 %B %d %H시:%M분:%S초")
format(p, "%Y년 %M %d %H시:%M분:%S초")
format(p, "%Y년 %M %d일일 %H시:%M분:%S초")
format(p, "%Y년 %M %d일 %H시:%M분:%S초")
format(p, "%Y년 %m %d일 %H시:%M분:%S초")
format(p, "%Y년 %m월월 %d일 %H시:%M분:%S초")
format(p, "%Y년 %m월월 %d일 %H시 %M분 %S초")
format(p, "%Y년 %m월 %d일 %H시 %M분 %S초")
# 문제4
datetime <- data.frame('12/25/2020 23:59:59', '1/25/2021 23:59:59', '2/25/2021 23:59:59')
datetime
# 문제4
datetime <- c('12/25/2020 23:59:59', '1/25/2021 23:59:59', '2/25/2021 23:59:59')
df <- data.frame(datetime)
df
as.POSIXlt(df)
as.POSIXlt(df$datetime)
df$datetime
as.POSIXlt("2020/12/25")$wday
as.POSIXlt("2020/12/25")$wday
as.POSIXlt("2020/12/25")$wday
as.POSIXlt(df$datetime[1])
df$datetime[1]
as.POSIXlt(df$datetime, format='%m/%d/%Y %H:%M:%S')
as.POSIXct(1449894438,origin="1970-01-01")
# 문제5
seq("2020-06-01",7)
seq(1,10)
seq(1, 10, 2)
# 문제5
seq("2020-06-01",7)
v1 <- strsplit(x=text, split=" ")
strsplit(x=text, split=" ")
strsplit(x= fox.said, split= " ")
strsplit(x= fox.said, split="")
strsplit(x= text, split= " ")
v1 <- unlist(strsplit(text, " "))
# 문제6
text <- "Happy Birthday to You"
v1 <- unlist(strsplit(text, " "))
v1
length(v1) + nchar(v1)
length(v1)
nchar(v1)
littleprince <- c(p1, p2, p3)
p1 <- "You come at four in the afternoon, than at there I shall begin to the  happy"
p2 <- "One runs the risk of weeping a little, if one lets himself be tamed"
p3 <- "What makes the desert beautiful is that somewhere it hides a well"
littleprince <- c(p1, p2, p3)
littleprince
strsplit(littleprince, " ")
strsplit(littleprince, " ")[[3]]
strsplit(littleprince, " ")[[3]][5]
# 문제7
paste(v1)
v1
length(v1)
# 문제7
v2 <- NULL
for(i in 1:length(v1)) v2 <- paste(v2, v1[i])
v2
length(v2)
nchar(v2)
nchar(v1)
# 문제8
v1 <- for(i in 1:10) paste(LETTERS[i], i)
v1
# 문제8
for(i in 1:10) v1 <- paste(LETTERS[i], i)
v1
# 문제8
for(i in 1:10) v1 <- append(paste(LETTERS[i], i))
# 문제8
for(i in 1:10) v1[i] <- paste(LETTERS[i], i)
v1
for(i in 1:10) v2[i] <- paste0(LETTERS[i], i)
v1; v2
# 문제9
text <- "Good Morning"
strsplit(x = text, split = " ")
littleprince <- c(p1, p2, p3)
strsplit(littleprince, " ")
fox.said <- "What is essential is invisible to the eye"
fox.said
strsplit(x= fox.said, split= " ")
strsplit(x= fox.said, split="")
fox.said.words <- unlist(strsplit(fox.said, " "))
fox.said.words
fox.said.words <- strsplit(fox.said, " ")[[1]]
fox.said.words
fox.said.words[3]
unlist(strsplit(x = text, split = " "))
strsplit(x = text, split = " ")
unlist(strsplit(x = text, split = " "))
strsplit(unlist(strsplit(x = text, split = " ")))
strsplit(unlist(strsplit(x = text, split = " ")), split = " ")
# 문제10
text <- c("Yesterday is history, tommrrow is a mystery, today is a gift!",
"That's why we call it the present – from kung fu Panda")
text1 <- gsub("[,-]", "", text)
text1
# 문제10
text <- c("Yesterday is history, tommrrow is a mystery, today is a gift!",
"That's why we call it the present - from kung fu Panda")
text1 <- gsub("[,-]", "", text)
text1
# 문제10
text <- c("Yesterday is history, tommrrow is a mystery, today is a gift!",
"That's why we call it the present - from kung fu Panda")
text <- gsub("[,-]", "", text)
text <- strsplit(text, " ")
text
text
text <- c("Yesterday is history, tommrrow is a mystery, today is a gift!",
"That's why we call it the present - from kung fu Panda")
text <- gsub("[,-]", "", text)
text <- strsplit(text, " ")
text
# 문제11
ssn <- c("941215-1234567","850605-2345678","760830-1357913")
# 문제 12
s1 <- "@^^@Have a nice day!! 좋은 하루!! 오늘도 100점 하루...."
r1 <- gsub("[가-힣]", "", s1)
r1
r2 <- gsub("[]", "", s1)
r2 <- gsub("[[]]", "", s1)
r2
r2 <- gsub("[[:punct:]]", "", s1)
r2
r3 <- gsub("[[:punct:][가-힣]]", "", s1)
r4 <- gsub("100", "백", s1)
r4
ssn <- gsub("\\d*-", "*", ssn)
ssn
ssn <- gsub("-\\d*", "*", ssn)
# 문제11
ssn <- c("941215-1234567","850605-2345678","760830-1357913")
ssn <- gsub("-\\d*", "*", ssn)
ssn
# 문제11
ssn <- c("941215-1234567","850605-2345678","760830-1357913")
ssn <- gsub("-\\d*", "-*******", ssn)
ssn
# 문제 12
s1 <- "@^^@Have a nice day!! 좋은 하루!! 오늘도 100점 하루...."
r1 <- gsub("[가-힣]", "", s1)
r2 <- gsub("[[:punct:]]", "", s1)
r3 <- gsub("[[:punct:][가-힣]]", "", s1)
r4 <- gsub("100", "백", s1)
r1; r2; r3; r4
# 문제9
text <- "Good Morning"
strsplit(unlist(strsplit(x = text, split = " ")), split = " ")
# 문제5
seq("2020-06-01",7)
# 문제1
day <- as.POSIXlt("1990-04-11")
cat(paste0("류제룡은 ",weekdays(day), "에 태어났어요"),"\n")
# 문제2
day1 <- format(Sys.Date(),"오늘은 %Y년 %B %d일")
day2 <- as.Date("2020-09-23") - as.Date("1990-04-11")
day2 <- grep("\\d", day2, value = T)
cat(paste0(today, "이고 내가 태어난지 ", day2, "일째되는 날이다"), "\n")
# 문제3
p <- as.POSIXlt(Sys.time())
format(p, "%Y년 %m월 %d일 %H시 %M분 %S초")
# 문제4
datetime <- c('12/25/2020 23:59:59', '1/25/2021 23:59:59', '2/25/2021 23:59:59')
df <- data.frame(datetime)
as.POSIXlt(df$datetime, format='%m/%d/%Y %H:%M:%S')
# 문제5
seq("2020-06-01",7)
# 문제5
seq(6,7)
seq
seq(6,7)
# 문제5
seq(6,, 7)
# 문제5
seq(6, , 7)
lt$mon+1
lt$hour
lt
lt$mon+1
lt$mon
# 문제5
as.Date("2020-06-01")
day2 <- seq(day,day+7)
# 문제5
day <- as.POSIXlt("2020-06-01")
day
day$mon
day$mon+1
seq(day$mon+1,day$mon+1+7)
str(lt)
day$day
day$weekday
seq(day$weekday) str(day)
str(day)
unclass(lt)
lt
day$mday
seq(day$mday, day$mday+7)
seq(day$mday, day$mday+6)
mon <- seq(day$mon, day$mon+6)
mon
day$mday <- seq(day$mday, day$mday+6)
day
format(day, "%b-%M%D")
format(day, "%b-%M%d")
format(day, "%b-%m%d")
format(day, "%B-%m%d")
#오늘은 xxxx년x월xx일x요일입니다 형식으로 출력
tmp<-Sys.Date()
year<-format(tmp,'%Y')
month<-format(tmp,'%m')
day<-format(tmp,'%d')
weekday<-format(tmp,'%A')
paste("오늘은 ",year,"년 ",month,"월 ",day,"일 ",weekday," 입니다.",sep="")
format(day, "%a-%m%d")
format(day, "%A-%m%d")
# 문제5
day <- as.POSIXlt("2020-06-01")
day$mday <- seq(day$mday, day$mday+6)
format(day, "%a-%m%d")
day
weekday(day)
weekdays(day)
day <- as.POSIXlt("2020-06-01")
day$mday <- seq(day$mday, day$mday+6)
day
# 문제5
day <- as.POSIXlt("2020-06-01")
weekdays(day)
# 문제5
day <- as.POSIXlt("2020-06-01")
day <- seq(day$mday, day$mday+6) #weekdays(day)
day
# 문제5
day <- as.POSIXlt("2020-06-01")
day$mday <- append(seq(day$mday, day$mday+6)) #weekdays(day)
day$mday <- seq(day$mday, day$mday+6)
format(day, "%a-%m%d")
# 문제5
day <- as.POSIXlt("2020-06-01")
day$mday <- seq(day$mday, day$mday+6)
format(day, "%a-%m%d")
day
unclass(day)
day$wday <- seq(day$wday, day$wday+6)
format(day, "%a-%m%d")
day$wday
# 문제5
day <- as.POSIXlt("2020-06-01")
day$yday <- seq(day$yday, day$yday+6)
# 문제5
day <- as.POSIXlt("2020-06-01")
yday <- seq(day$yday, day$yday+6)
format(day, "%a-%m%d")
format(yday, "%a-%m%d")
yday
# 문제5
day <- as.POSIXlt("2020-06-01")
day$yday <- seq(day$yday, day$yday+6)
format(day, "%a-%m%d")
# 문제5
day <- seq(20200601,20200601+6)
day
day <- as.POSIXlt(day)
day <- as.POSIXlt(day, format = "%Y%M%D")
# 문제5
day <- str(seq(20200601,20200601+6))
day
# 문제5
day <- seq(20200601,20200601+6)
day
# 문제5
day <- as.str(seq(20200601,20200601+6))
# 문제5
day <- as.character(seq(20200601,20200601+6))
day
day <- as.POSIXlt(day, format = "%Y%M%D")
day
# 문제4
datetime <- c('12/25/2020 23:59:59', '1/25/2021 23:59:59', '2/25/2021 23:59:59')
df <- data.frame(datetime)
as.POSIXlt(df$datetime, format='%m/%d/%Y %H:%M:%S')
day <- as.POSIXlt(day, format = "%Y%M%d")
day
# 문제5
day <- as.character(seq(20200601,20200601+6))
day
day <- as.Date(day, format = "%Y%M%d")
format(day, "%a-%m%d")
# 문제5
day <- as.character(seq(20200601,20200601+6))
day <- as.Date(day, format = "%Y%M%d")
format(day, "%a-%m%d")
format(day, "%a-%M%d")
format(day, "%a-%M%D")
as.Date('1/15/2018',format='%m/%d/%Y') # format 은 생략 가능
(today <- Sys.Date())
format(today, "%Y년 %m월 %d일")
format(today, "%d일 %B %Y년")
format(today, "%y")
format(today, "%Y")
format(today, "%b")
format(today, "%B")
format(today, "%a")
format(today, "%A")
format(today, "%Y년 %m월 %d일")
day <- as.Date(day)
format(day, "%a-%M%D")
# 문제5
day <- as.character(seq(20200601,20200601+6))
day <- as.Date(day)
format(day, "%a-%M%D")
# 문제5
day <- as.character(seq(20200601,20200601+6))
day <- as.Date(day)
# 문제5
day <- as.character(seq(20200601,20200601+6))
day
day <- as.Date(day, format = "%Y%m%d")
day
# 문제5
day <- as.character(seq(20200601,20200601+6))
day <- as.POSIXlt(day, format = "%Y%m%d")
day
format(day, "%a-%M%D")
# 문자열을 날짜+시간형으로
strptime(x1, "%Y-%m-%d %H:%M:%S")
# 문제3
p <- as.POSIXlt(Sys.time())
format(p, "%Y년 %m월 %d일 %H시 %M분 %S초")
format(day, "%M%D")
day
format(day, "%m%d")
format(day, "%a-%m%d")
rep(1:3, 5)
rep(1:3, times=5) # 키워드 파라미터
rep(1:3, each=5)
seq(1,10)
seq(1, 10, 2)
v1 <- paste(LETTERS[1:10],c(1:10))
v1
v1 <- paste(LETTERS[1:10],c(1:10))
v2 <- paste0(LETTERS[1:10],c(1:10))
v1; v2
v2 <- paste(v1)
v2
text <- "Happy Birthday to You"
v1 <- unlist(strsplit(text, " "))
length(v1)
nchar(v1)
v2 <- paste(v1)
v2
v2 <- paste0(v1)
v2
for(i in 1:length(v1)) v2 <- paste(v2, v1[i])
v2
text <- "Happy Birthday to You"
v1 <- unlist(strsplit(text, " "))
length(v1)
nchar(v1)
# 문제7
v2 <- NULL
for(i in 1:length(v1)) v2 <- paste(v2, v1[i])
v2
search()
library(showtext)
showtext_auto()
font_add(family = "cat", regular = "fonts/HoonWhitecatR.ttf")
font_add(family = "dog", regular = "fonts/THEdog.ttf")
font_add(family = "maple", regular = "fonts/MaplestoryBold.ttf")
rainbow(10)
국어<- c(4,7,6,8,5,5,9,10,4,10)
plot(국어)
rainbow(10)
국어 <- c(4,7,6,8,5,5,9,10,4,10)
수학 <- c(7,4,7,3,8,10,4,10,5,7)
plot(국어, type="o", col="blue")
lines(수학, type="o", pch=16, lty=2, col="red")
title(main="성적그래프", col.main="red", font.main=3)
국어 <- c(4,7,6,8,5,5,9,10,4,10)
par(mar=c(1,1,1,1), mfrow=c(4,2))
plot(국어, type="p", col="blue", main="type = p", xaxt="n", yaxt="n")
plot(국어, type="l", col="blue", main="type = l", xaxt="n", yaxt="n")
plot(국어, type="b", col="blue", main="type = b", xaxt="n", yaxt="n")
plot(국어, type="c", col="blue", main="type = c", xaxt="n", yaxt="n")
plot(국어, type="o", col="blue", main="type = o", xaxt="n", yaxt="n")
plot(국어, type="h", col="blue", main="type = h", xaxt="n", yaxt="n")
plot(국어, type="s", col="blue", main="type = s", xaxt="n", yaxt="n")
plot(국어, type="S", col="blue", main="type = S", xaxt="n", yaxt="n")
par(mar=c(5,5,5,5), mfrow=c(1,1))
국어 <- c(4,7,6,8,5,5,9,10,4,10);
수학 <- c(7,4,7,3,8,10,4,10,5,7)
plot(국어, type="o", col="blue", ylim=c(0,10), axes=FALSE, ann=FALSE)
# x, y 축 추가하기
axis(1, at=1:10, lab=c("01","02","03","04", "05","06","07","08","09","10"), family="maple") # x축 추가
axis(2, at=c(0,2,4,6,8,10), family="maple")  # y축 추가
# 그래프 추가하고, 그래프에 박스 그리기
lines(수학, type="o", pch=16, lty=2, col="red")
box()   # 박스 그리기
# 그래프 제목, 축의 제목, 범례 나타내기
title(main="성적그래프", col.main="red", font.main=4, family="maple")
title(xlab="학번", col.lab=rgb(0,1,0), family="maple")
title(ylab="점수", col.lab=rgb(1,0,0), family="maple")
legend(8, 3, c("국어","수학"), cex=0.8, col=c("blue","red"), pch=c(21,16), lty=c(1,2), family="maple")
legend(8, 3, c("국어","수학"), cex=0.8, col=c("blue","red"), pch=c(21,16), lty=c(1,2), family="maple")
legend(8, 3, c("국어","수학"), cex=0.8, col=c("blue","red"), pch=c(21,16), lty=c(1,2), family="maple")
legend(8, 3, c("국어","수학"), cex=0.8, col=c("blue","red"), pch=c(21,16), lty=c(1,2))
plot(국어, type="o", col="blue", ylim=c(0,10), axes=FALSE, ann=FALSE)
# x, y 축 추가하기
axis(1, at=1:10, lab=c("01","02","03","04", "05","06","07","08","09","10"), family="maple") # x축 추가
axis(2, at=c(0,2,4,6,8,10), family="maple")  # y축 추가
# 그래프 추가하고, 그래프에 박스 그리기
lines(수학, type="o", pch=16, lty=2, col="red")
box()   # 박스 그리기
# 그래프 제목, 축의 제목, 범례 나타내기
title(main="성적그래프", col.main="red", font.main=4, family="maple")
title(xlab="학번", col.lab=rgb(0,1,0), family="maple")
title(ylab="점수", col.lab=rgb(1,0,0), family="maple")
legend(8, 3, c("국어","수학"), cex=0.8, col=c("blue","red"), pch=c(21,16), lty=c(1,2))
plot(국어, type="o", col="blue", ylim=c(0,10), axes=FALSE, ann=FALSE)
# x, y 축 추가하기
axis(1, at=1:10, lab=c("01","02","03","04", "05","06","07","08","09","10"), family="maple") # x축 추가
axis(2, at=c(0,2,4,6,8,10), family="maple")  # y축 추가
# 그래프 추가하고, 그래프에 박스 그리기
lines(수학, type="o", pch=16, lty=2, col="red")
box()   # 박스 그리기
# 그래프 제목, 축의 제목, 범례 나타내기
title(main="성적그래프", col.main="red", font.main=4, family="maple")
title(xlab="학번", col.lab=rgb(0,1,0), family="maple")
title(ylab="점수", col.lab=rgb(1,0,0), family="maple")
legend(8, 3, c("국어","수학"), cex=0.8, col=c("blue","red"), pch=c(21,16), lty=c(1,2))
plot(국어, type="o", col="blue", ylim=c(0,10), axes=FALSE, ann=FALSE)
# x, y 축 추가하기
axis(1, at=1:10, lab=c("01","02","03","04", "05","06","07","08","09","10"), family="maple") # x축 추가
axis(2, at=c(0,2,4,6,8,10), family="maple")  # y축 추가
# 그래프 추가하고, 그래프에 박스 그리기
lines(수학, type="o", pch=16, lty=2, col="red")
box()   # 박스 그리기
# 그래프 제목, 축의 제목, 범례 나타내기
title(main="성적그래프", col.main="red", font.main=4, family="maple")
title(xlab="학번", col.lab=rgb(0,1,0), family="maple")
title(ylab="점수", col.lab=rgb(1,0,0), family="maple")
legend(8, 3, c("국어","수학"), cex=0.8, col=c("blue","red"), pch=c(21,16), lty=c(1,2))
(성적 <- read.table("data/성적.txt", header=TRUE))
png(filename="성적.png", height=400, width=700, bg="white") # 출력을 png파일로 설정
plot(성적$국어, type="o", col=pcols[1], ylim=c(0, ymax), axes=FALSE, ann=FALSE)
axis(1, at=1:10, lab=c("01","02","03","04","05","06","07","08","09","10"))
axis(2, at=c(0,2,4,6,8,10), lab=c(0,2,4,6,8,10))
box()
lines(성적$수학, type="o", pch=16, lty=2, col=pcols[2])
lines(성적$영어, type="o", pch=23, lty=3, col=pcols[3] )
title(main="성적그래프", col.main="red", font.main=4)
title(xlab="학번", col.lab=rgb(1,0,0))
title(ylab="점수", col.lab=rgb(0,0,1))
legend(1, ymax, names(성적)[c(3,4,5)], cex=0.8, col=pcols, pch=c(21,16,23), lty=c(1,2,3))
dev.off()
plot(성적$학번, 성적$국어, main="성적그래프", xlab="학번", ylab="점수",  xlim=c(0, 11), ylim=c(0, 11))
ymax <- max(성적[3:5]) #성적 데이터 중에서 최대값을 찾는다(y 축의 크기 제한)
ymax
pcols<- c("red","blue","green")
png(filename="성적.png", height=400, width=700, bg="white") # 출력을 png파일로 설정
plot(성적$국어, type="o", col=pcols[1], ylim=c(0, ymax), axes=FALSE, ann=FALSE)
axis(1, at=1:10, lab=c("01","02","03","04","05","06","07","08","09","10"))
axis(2, at=c(0,2,4,6,8,10), lab=c(0,2,4,6,8,10))
box()
lines(성적$수학, type="o", pch=16, lty=2, col=pcols[2])
lines(성적$영어, type="o", pch=23, lty=3, col=pcols[3] )
title(main="성적그래프", col.main="red", font.main=4)
title(xlab="학번", col.lab=rgb(1,0,0))
title(ylab="점수", col.lab=rgb(0,0,1))
legend(1, ymax, names(성적)[c(3,4,5)], cex=0.8, col=pcols, pch=c(21,16,23), lty=c(1,2,3))
dev.off()
plot(국어, 수학)
plot(수학~국어)
barplot(국어)
